{
    "contracts": {
        "/home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol": {
            "ETHLock": {
                "abi": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "inputs": [],
                        "name": "lockToken",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "transferToken",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "6080604052348015600f57600080fd5b5060818061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063799a5359146037578063bca7a9e2146037575b600080fd5b604080516001815290519081900360200190f3fea2646970667358221220fa10dfe02048bcfb4d9e1e892981a223c0a6bc569c41dedeb35fc77562b333e464736f6c63430008030033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x81 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x799A5359 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xBCA7A9E2 EQ PUSH1 0x37 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP2 MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL LT 0xDF 0xE0 KECCAK256 0x48 0xBC 0xFB 0x4D SWAP15 0x1E DUP10 0x29 DUP2 LOG2 0x23 0xC0 0xA6 0xBC JUMP SWAP13 COINBASE 0xDE 0xDE 0xB3 0x5F 0xC7 PUSH22 0x62B333E464736F6C6343000803003300000000000000 ",
                        "sourceMap": "72:308:0:-:0;;;107:17;;;;;;;;;;72:308;;;;;;"
                    },
                    "deployedBytecode": {
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:203:2",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:2",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "109:92:2",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "119:26:2",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "131:9:2"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "142:2:2",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "127:3:2"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "127:18:2"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "119:4:2"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "161:9:2"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "186:6:2"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "179:6:2"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "179:14:2"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "172:6:2"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "172:22:2"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "154:6:2"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "154:41:2"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "154:41:2"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "78:9:2",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "89:6:2",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "100:4:2",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:187:2"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
                                "id": 2,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "6080604052348015600f57600080fd5b506004361060325760003560e01c8063799a5359146037578063bca7a9e2146037575b600080fd5b604080516001815290519081900360200190f3fea2646970667358221220fa10dfe02048bcfb4d9e1e892981a223c0a6bc569c41dedeb35fc77562b333e464736f6c63430008030033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x799A5359 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xBCA7A9E2 EQ PUSH1 0x37 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP2 MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL LT 0xDF 0xE0 KECCAK256 0x48 0xBC 0xFB 0x4D SWAP15 0x1E DUP10 0x29 DUP2 LOG2 0x23 0xC0 0xA6 0xBC JUMP SWAP13 COINBASE 0xDE 0xDE 0xB3 0x5F 0xC7 PUSH22 0x62B333E464736F6C6343000803003300000000000000 ",
                        "sourceMap": "72:308:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;258:119;;;;366:4;154:41:2;;258:119:0;;;;;;142:2:2;258:119:0;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "25800",
                            "executionCost": "81",
                            "totalCost": "25881"
                        },
                        "external": {
                            "lockToken()": "171",
                            "transferToken()": "149"
                        }
                    },
                    "methodIdentifiers": {
                        "lockToken()": "bca7a9e2",
                        "transferToken()": "799a5359"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"lockToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol\":\"ETHLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol\":{\"keccak256\":\"0xa7775aa59b8acf3a420bf35330d0817fa4ee3098e7088de192297b3428d0f919\",\"urls\":[\"bzz-raw://fae5d382c5e4e4ec670031d2cec748b2d74e8b45b1290539b5008f30c2df38cb\",\"dweb:/ipfs/QmXfCWbXpxCNEkYZbgUs9dTdHvd1ooEEdGadWVjeertE2N\"]},\"/home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol\":{\"keccak256\":\"0xd05956961d7072e3be753d1738c9a529b39a934918125587a5bdb921688cff6b\",\"urls\":[\"bzz-raw://a1e7c48a28736e94cb754aadafb5b13556b15e2eab95992c1eb8de3fbc98861d\",\"dweb:/ipfs/QmSMArRedpMqszyfpFQ3UmeewbtEW7bod1k4CjNiuumukW\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "/home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol": {
            "IETHLock": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "lockToken",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "transferToken",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "lockToken()": "bca7a9e2",
                        "transferToken()": "799a5359"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"lockToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol\":\"IETHLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol\":{\"keccak256\":\"0xd05956961d7072e3be753d1738c9a529b39a934918125587a5bdb921688cff6b\",\"urls\":[\"bzz-raw://a1e7c48a28736e94cb754aadafb5b13556b15e2eab95992c1eb8de3fbc98861d\",\"dweb:/ipfs/QmSMArRedpMqszyfpFQ3UmeewbtEW7bod1k4CjNiuumukW\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        }
    },
    "errors": [
        {
            "component": "general",
            "errorCode": "1878",
            "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> /home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol\n\n",
            "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
            "severity": "warning",
            "sourceLocation": {
                "end": -1,
                "file": "/home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol",
                "start": -1
            },
            "type": "Warning"
        },
        {
            "component": "general",
            "errorCode": "1878",
            "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> /home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol\n\n",
            "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
            "severity": "warning",
            "sourceLocation": {
                "end": -1,
                "file": "/home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol",
                "start": -1
            },
            "type": "Warning"
        },
        {
            "component": "general",
            "errorCode": "2018",
            "formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> /home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol:8:5:\n  |\n8 |     function lockToken(/* */) override external view returns(bool) {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
            "message": "Function state mutability can be restricted to pure",
            "severity": "warning",
            "sourceLocation": {
                "end": 252,
                "file": "/home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol",
                "start": 130
            },
            "type": "Warning"
        },
        {
            "component": "general",
            "errorCode": "2018",
            "formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> /home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol:14:5:\n   |\n14 |     function transferToken(/*  */) override external view returns(bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
            "message": "Function state mutability can be restricted to pure",
            "severity": "warning",
            "sourceLocation": {
                "end": 377,
                "file": "/home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol",
                "start": 258
            },
            "type": "Warning"
        }
    ],
    "sources": {
        "/home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol": {
            "ast": {
                "absolutePath": "/home/zach/projects/web3/warp-contracts/contracts/wormhole-protocol/home_contracts/eth_lock/ETHLock.sol",
                "exportedSymbols": {
                    "ETHLock": [
                        27
                    ],
                    "IETHLock": [
                        40
                    ]
                },
                "id": 28,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:23:0"
                    },
                    {
                        "absolutePath": "/home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol",
                        "file": "../../../../interfaces/IETHLock.sol",
                        "id": 2,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 28,
                        "sourceUnit": 41,
                        "src": "25:45:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 3,
                                    "name": "IETHLock",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 40,
                                    "src": "92:8:0"
                                },
                                "id": 4,
                                "nodeType": "InheritanceSpecifier",
                                "src": "92:8:0"
                            }
                        ],
                        "contractDependencies": [
                            40
                        ],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 27,
                        "linearizedBaseContracts": [
                            27,
                            40
                        ],
                        "name": "ETHLock",
                        "nameLocation": "81:7:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "body": {
                                    "id": 7,
                                    "nodeType": "Block",
                                    "src": "121:3:0",
                                    "statements": []
                                },
                                "id": 8,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 5,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "118:2:0"
                                },
                                "returnParameters": {
                                    "id": 6,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "121:0:0"
                                },
                                "scope": 27,
                                "src": "107:17:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    34
                                ],
                                "body": {
                                    "id": 16,
                                    "nodeType": "Block",
                                    "src": "193:59:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "hexValue": "74727565",
                                                "id": 14,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "241:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 13,
                                            "id": 15,
                                            "nodeType": "Return",
                                            "src": "234:11:0"
                                        }
                                    ]
                                },
                                "functionSelector": "bca7a9e2",
                                "id": 17,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "lockToken",
                                "nameLocation": "139:9:0",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 10,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "156:8:0"
                                },
                                "parameters": {
                                    "id": 9,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "148:7:0"
                                },
                                "returnParameters": {
                                    "id": 13,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 12,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 17,
                                            "src": "187:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 11,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "187:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "186:6:0"
                                },
                                "scope": 27,
                                "src": "130:122:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    39
                                ],
                                "body": {
                                    "id": 25,
                                    "nodeType": "Block",
                                    "src": "326:51:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "hexValue": "74727565",
                                                "id": 23,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "366:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 22,
                                            "id": 24,
                                            "nodeType": "Return",
                                            "src": "359:11:0"
                                        }
                                    ]
                                },
                                "functionSelector": "799a5359",
                                "id": 26,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transferToken",
                                "nameLocation": "267:13:0",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 19,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "289:8:0"
                                },
                                "parameters": {
                                    "id": 18,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "280:8:0"
                                },
                                "returnParameters": {
                                    "id": 22,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 21,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 26,
                                            "src": "320:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 20,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "320:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "319:6:0"
                                },
                                "scope": 27,
                                "src": "258:119:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 28,
                        "src": "72:308:0"
                    }
                ],
                "src": "0:380:0"
            },
            "id": 0
        },
        "/home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol": {
            "ast": {
                "absolutePath": "/home/zach/projects/web3/warp-contracts/interfaces/IETHLock.sol",
                "exportedSymbols": {
                    "IETHLock": [
                        40
                    ]
                },
                "id": 41,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 29,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:23:1"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "fullyImplemented": false,
                        "id": 40,
                        "linearizedBaseContracts": [
                            40
                        ],
                        "name": "IETHLock",
                        "nameLocation": "35:8:1",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "bca7a9e2",
                                "id": 34,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "lockToken",
                                "nameLocation": "60:9:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 30,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "69:82:1"
                                },
                                "returnParameters": {
                                    "id": 33,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 32,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 34,
                                            "src": "169:4:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 31,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "169:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "168:6:1"
                                },
                                "scope": 40,
                                "src": "51:124:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "799a5359",
                                "id": 39,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transferToken",
                                "nameLocation": "189:13:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 35,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "202:60:1"
                                },
                                "returnParameters": {
                                    "id": 38,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 37,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 39,
                                            "src": "280:4:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 36,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "280:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "279:6:1"
                                },
                                "scope": 40,
                                "src": "180:106:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 41,
                        "src": "25:263:1"
                    }
                ],
                "src": "0:288:1"
            },
            "id": 1
        }
    }
}